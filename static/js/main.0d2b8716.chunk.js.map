{"version":3,"sources":["img/welcome.png","img/about.png","Pages/Common.js","Pages/Home.js","Pages/About.js","Pages/Service.js","Pages/Services.js","Pages/Contact.js","Components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Common","title","description","btn_text","visit","img","className","to","src","alt","Home","welcome","About","about","Service","service","useState","show","setShow","handleClose","Modal","onHide","Header","closeButton","Title","name","Body","nickname","birthday","Footer","Button","variant","onClick","Card","style","width","Img","Services","services","setServices","fetchData","a","axios","get","res","console","log","data","useEffect","map","key","char_id","Contact","Form","Group","controlId","Label","Control","type","placeholder","as","rows","Navigation","Navbar","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","activeClassName","exact","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0d2b8716.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/welcome.3e257af8.png\";","module.exports = __webpack_public_path__ + \"static/media/about.b46b36cb.png\";","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './Common.css';\nconst Common = ({ title, description, btn_text, visit, img }) => {\n\treturn (\n\t\t<div className=\"page\">\n\t\t\t<div className=\"page__content\">\n\t\t\t\t<h1>{title}</h1>\n\t\t\t\t<h4>{description}</h4>\n\t\t\t\t<NavLink className=\" btn btn-outline-success\" to={visit}>\n\t\t\t\t\t{btn_text}\n\t\t\t\t</NavLink>\n\t\t\t</div>\n\t\t\t<div className=\"page__picture\">\n\t\t\t\t<img src={img} className=\"picture\" alt=\"page_picture\" />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Common;\n","import React from 'react';\nimport Common from './Common';\nimport welcome from '../img/welcome.png';\nconst Home = () => {\n\treturn (\n\t\t<Common\n\t\t\ttitle=\"Welcome to Nakshatra\"\n\t\t\tdescription=\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam, accusantium?\"\n\t\t\timg={welcome}\n\t\t\tbtn_text=\"Services\"\n\t\t\tvisit=\"/services\"\n\t\t/>\n\t);\n};\n\nexport default Home;\n","import React from 'react';\nimport Common from './Common';\nimport about from '../img/about.png';\nconst About = () => {\n\treturn (\n\t\t<Common\n\t\t\ttitle=\"About Nakshatra\"\n\t\t\tdescription=\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam, accusantium?\"\n\t\t\timg={about}\n\t\t\tbtn_text=\"Contact Us\"\n\t\t\tvisit=\"/contact\"\n\t\t/>\n\t);\n};\n\nexport default About;\n","import React, { useState } from 'react';\nimport { Card, Button, Modal } from 'react-bootstrap';\nconst Service = ({ service }) => {\n\tconst [show, setShow] = useState(false);\n\n\tconst handleClose = () => setShow(false);\n\tconst handleShow = () => setShow(true);\n\treturn (\n\t\t<>\n\t\t\t<Modal show={show} onHide={handleClose}>\n\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t<Modal.Title>{service.name}</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t{\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h3>{service.nickname}</h3>\n\t\t\t\t\t\t\t<h4>{service.birthday}</h4>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button variant=\"secondary\" onClick={handleClose}>\n\t\t\t\t\t\tClose\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button variant=\"primary\" onClick={handleClose}>\n\t\t\t\t\t\tSave Changes\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t\t<div className=\"col-4\">\n\t\t\t\t<Card style={{ width: '18rem' }}>\n\t\t\t\t\t<Card.Img variant=\"top\" src={service.img} />\n\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\tonClick={handleShow}\n\t\t\t\t\t\t\tclassName=\"btn-block\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{service.name}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Card.Body>\n\t\t\t\t</Card>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default Service;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Service from './Service';\nconst Services = () => {\n\tconst [services, setServices] = useState([]);\n\n\tconst fetchData = async () => {\n\t\tconst res = await axios.get(\n\t\t\t'https://www.breakingbadapi.com/api/characters?name='\n\t\t);\n\t\tconsole.log(res.data);\n\t\tsetServices(res.data);\n\t};\n\tuseEffect(() => {\n\t\tfetchData();\n\t}, []);\n\treturn (\n\t\t<div className=\"row\">\n\t\t\t{services.map((service) => (\n\t\t\t\t<Service key={service.char_id} service={service} />\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default Services;\n","import React from 'react';\nimport { Form, Button } from 'react-bootstrap';\nconst Contact = () => {\n\treturn (\n\t\t<div>\n\t\t\t<Form>\n\t\t\t\t<Form.Group controlId=\"exampleForm.ControlInput1\">\n\t\t\t\t\t<Form.Label>Email address</Form.Label>\n\t\t\t\t\t<Form.Control type=\"email\" placeholder=\"name@example.com\" />\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group controlId=\"exampleForm.ControlTextarea1\">\n\t\t\t\t\t<Form.Label>Details Here</Form.Label>\n\t\t\t\t\t<Form.Control as=\"textarea\" rows=\"3\" />\n\t\t\t\t</Form.Group>\n\t\t\t\t<Button variant=\"primary\" type=\"submit\">\n\t\t\t\t\tSubmit\n\t\t\t\t</Button>\n\t\t\t</Form>\n\t\t</div>\n\t);\n};\n\nexport default Contact;\n","import React from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\nimport './Navigation.css';\nconst Navigation = () => {\n\treturn (\n\t\t<Navbar expand=\"lg\">\n\t\t\t<Navbar.Brand className=\"nav__brand \" to=\"/\">\n\t\t\t\tNakshatra\n\t\t\t</Navbar.Brand>\n\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t\t\t<Nav className=\"ml-auto\">\n\t\t\t\t\t<NavLink\n\t\t\t\t\t\tactiveClassName=\"active__link\"\n\t\t\t\t\t\tclassName=\"nav-link\"\n\t\t\t\t\t\texact\n\t\t\t\t\t\tto=\"/\"\n\t\t\t\t\t>\n\t\t\t\t\t\tHome\n\t\t\t\t\t</NavLink>\n\t\t\t\t\t<NavLink\n\t\t\t\t\t\tactiveClassName=\"active__link\"\n\t\t\t\t\t\tclassName=\"nav-link\"\n\t\t\t\t\t\tto=\"/about\"\n\t\t\t\t\t>\n\t\t\t\t\t\tAbout\n\t\t\t\t\t</NavLink>\n\t\t\t\t\t<NavLink\n\t\t\t\t\t\tactiveClassName=\"active__link\"\n\t\t\t\t\t\tclassName=\"nav-link\"\n\t\t\t\t\t\tto=\"/services\"\n\t\t\t\t\t>\n\t\t\t\t\t\tServices\n\t\t\t\t\t</NavLink>\n\t\t\t\t\t<NavLink\n\t\t\t\t\t\tactiveClassName=\"active__link\"\n\t\t\t\t\t\tclassName=\"nav-link\"\n\t\t\t\t\t\tto=\"/contact\"\n\t\t\t\t\t>\n\t\t\t\t\t\tContact\n\t\t\t\t\t</NavLink>\n\t\t\t\t</Nav>\n\t\t\t</Navbar.Collapse>\n\t\t</Navbar>\n\t);\n};\n\nexport default Navigation;\n","import React from 'react';\nimport './App.css';\nimport {\n\tBrowserRouter as Router,\n\tRoute,\n\tSwitch,\n\tRedirect,\n} from 'react-router-dom';\nimport Home from './Pages/Home';\nimport About from './Pages/About';\nimport Services from './Pages/Services';\nimport Contact from './Pages/Contact';\nimport Navigation from './Components/Navigation';\nfunction App() {\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<Router>\n\t\t\t\t<Navigation />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t\t\t\t<Route exact path=\"/about\" component={About} />\n\t\t\t\t\t<Route exact path=\"/services\" component={Services} />\n\t\t\t\t\t<Route exact path=\"/contact\" component={Contact} />\n\t\t\t\t\t<Redirect to=\"/\" />\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}